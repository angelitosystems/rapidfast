# {{projectName}}

{{projectDescription}}

## Instalaci√≥n

```bash
# Instalar dependencias
npm install
```

## Configuraci√≥n

1. Copia el archivo `.env.example` a `.env` y configura tus variables de entorno:

```bash
cp .env.example .env
```

2. Edita el archivo `.env` con tus datos de conexi√≥n a la base de datos.

### Configuraci√≥n de MySQL 8+

Si est√°s usando MySQL 8 o superior, es posible que necesites cambiar el m√©todo de autenticaci√≥n para compatibilidad. Ejecuta los siguientes comandos SQL:

```sql
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'tu_contrase√±a';
FLUSH PRIVILEGES;
```

O si prefieres crear un nuevo usuario:

```sql
CREATE USER 'usuario'@'localhost' IDENTIFIED WITH mysql_native_password BY 'contrase√±a';
GRANT ALL PRIVILEGES ON *.* TO 'usuario'@'localhost';
FLUSH PRIVILEGES;
```

## üöÄ Inicio R√°pido

1. **Desarrollo**
   ```bash
   npm run dev
   # o
   pnpm dev
   # o
   yarn dev
   ```
   El servidor se iniciar√° en `http://localhost:3000` y la documentaci√≥n de Swagger se abrir√° autom√°ticamente en tu navegador.

2. **Producci√≥n**
   ```bash
   npm run build
   npm start
   # o
   pnpm build
   pnpm start
   # o
   yarn build
   yarn start
   ```

## üìö Documentaci√≥n API

La documentaci√≥n de la API est√° disponible en:
- Swagger UI: `http://localhost:3000/api-docs`
- Swagger JSON: `http://localhost:3000/swagger.json`

## üõ†Ô∏è Scripts Disponibles

- `npm run dev` - Inicia el servidor en modo desarrollo con recarga autom√°tica
- `npm run build` - Compila el proyecto para producci√≥n
- `npm start` - Inicia el servidor en modo producci√≥n
- `npm run test` - Ejecuta las pruebas
- `npm run lint` - Ejecuta el linter
- `npm run format` - Formatea el c√≥digo

## üìù Ejemplo de API

El proyecto incluye un ejemplo de API REST para gestionar tareas (TODOs) con las siguientes operaciones:

- `GET /todos` - Obtener todas las tareas
- `GET /todos/:id` - Obtener una tarea por ID
- `POST /todos` - Crear una nueva tarea
- `PUT /todos/:id` - Actualizar una tarea existente
- `DELETE /todos/:id` - Eliminar una tarea

Cada endpoint est√° completamente documentado en Swagger con ejemplos de uso y descripciones detalladas.

## üîß Tecnolog√≠as

- [RapidFast](https://github.com/angelitosystems/rapidfast) - Framework web moderno y r√°pido
- TypeScript - Lenguaje de programaci√≥n tipado
- Swagger/OpenAPI - Documentaci√≥n de API
- Jest - Framework de pruebas

## üìÑ Licencia

ISC 

## Estructura del proyecto

- `src/`: C√≥digo fuente
  - `app/`: M√≥dulos de la aplicaci√≥n
    - `users/`: M√≥dulo de usuarios (autenticaci√≥n)
    - `todo/`: Ejemplo de m√≥dulo de tareas
  - `config/`: Archivos de configuraci√≥n
  - `database/`: Configuraci√≥n de base de datos y migraciones

## Caracter√≠sticas

- Arquitectura modular basada en decoradores
- Soporte para base de datos con TypeORM
- Documentaci√≥n autom√°tica con Swagger
- Autenticaci√≥n JWT
- Hot Reload en desarrollo
- Escalable y f√°cil de mantener 